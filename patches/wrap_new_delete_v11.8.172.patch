diff --git a/BUILD.gn b/BUILD.gn
index dd97c4f922c..7bac8115cbe 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -734,6 +734,20 @@ config("internal_config_base") {
   ]
 }
 
+v8_source_set("wrap_symbols") {
+  sources = [
+    "src/base/wrap_symbols.cc",
+  ]
+
+  public_configs = []
+
+  public_deps = []
+
+  deps = []
+  
+  configs = [ ":internal_config" ]
+}
+
 config("internal_config") {
   defines = []
 
@@ -5753,6 +5767,7 @@ v8_source_set("v8_base_without_compiler") {
     ":v8_tracing",
     ":v8_version",
     "src/inspector:inspector",
+    ":wrap_symbols",
   ]
 
   public_deps = [
@@ -5902,6 +5917,7 @@ v8_source_set("torque_base") {
   deps = [
     ":v8_flags",
     ":v8_shared_internal_headers",
+    ":wrap_symbols",
   ]
 
   public_deps = [ ":v8_libbase" ]
@@ -6084,7 +6100,7 @@ v8_component("v8_libbase") {
 
   public_configs = [ ":libbase_config" ]
 
-  deps = [ ":v8_config_headers" ]
+  deps = [ ":v8_config_headers" , ":wrap_symbols"]
 
   libs = []
 
@@ -6299,6 +6315,7 @@ v8_component("v8_libplatform") {
     ":v8_config_headers",
     ":v8_libbase",
     ":v8_tracing",
+    ":wrap_symbols",
   ]
 
   if (v8_use_perfetto) {
@@ -6747,6 +6764,7 @@ if (current_toolchain == v8_generator_toolchain) {
       ":v8_libbase",
       ":v8_shared_internal_headers",
       "//build/win:default_exe_manifest",
+      ":wrap_symbols",
     ]
   }
 }
diff --git a/src/base/wrap_symbols.cc b/src/base/wrap_symbols.cc
new file mode 100644
index 00000000000..986bf64dd1a
--- /dev/null
+++ b/src/base/wrap_symbols.cc
@@ -0,0 +1,50 @@
+#include <stdlib.h>
+#include "logging.h"
+
+extern "C" {
+
+void* __puerts_wrap__Znwm(unsigned long size) {
+    void* ptr = ::malloc(size);
+    if (!ptr) {
+        FATAL("Fatal process out of memory for new");
+        UNREACHABLE();
+    }
+    return ptr;
+}
+
+void __puerts_wrap__ZdlPv(void* ptr) noexcept {
+    ::free(ptr);
+}
+
+void* __puerts_wrap__Znam(unsigned long size) {
+    void* ptr = ::malloc(size);
+    if (!ptr) {
+        FATAL("Fatal process out of memory for new[]");
+        UNREACHABLE();
+    }
+    return ptr;
+}
+
+void __puerts_wrap__ZdaPv(void* ptr) noexcept {
+    ::free(ptr);
+}
+
+void* __puerts_wrap__ZnwmRKSt9nothrow_t(unsigned long size) {
+    void* ptr = ::malloc(size);
+    if (!ptr) {
+        FATAL("Fatal process out of memory for new (std::nothrow)");
+        UNREACHABLE();
+    }
+    return ptr;
+}
+
+void* __puerts_wrap__ZnamRKSt9nothrow_t(unsigned long size) {
+    void* ptr = ::malloc(size);
+    if (!ptr) {
+        FATAL("Fatal process out of memory for new (std::nothrow)[]");
+        UNREACHABLE();
+    }
+    return ptr;
+}
+
+}
